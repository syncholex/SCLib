syntax = "proto3";
package impala.stories;
option optimize_for = CODE_SIZE;
option objc_class_prefix = "IMP";
option csharp_namespace = "SnapProto.Impala.Stories";

import "impala/stories/IMPInsights.proto";
import "impala/stories/common/IMPStories.proto";
import "snapchat/context/SCStories.proto";

message IMPBusinessSnap {
    string businessId = 1;
    bytes submittedStorySnapData = 2;
    string posterUserId = 3;
}

message IMPBusinessSnapDump {
    .impala.stories.IMPBusinessSnap businessSnap = 1;
    int64 ingestTimestampMs = 2;
}

message IMPBusinessStorySnap {
    string businessId = 1;
    string posterUserId = 2;
    bytes submittedStorySnapData = 3;
}

message IMPCopySnapRequest {
    string snapId = 1;
    string mediaId = 2;
    int64 mediaTypeValue = 5;
}

message IMPCopySnapResponse {
    string snapId = 1;
    string mediaId = 2;
    string mediaURL = 3;
}

message IMPDeleteBusinessSnapsBySnapIdRequest {
    repeated string snapIdsArray = 1;
}

message IMPDeleteBusinessSnapsBySnapIdResponse {
}

message IMPGetActiveBusinessStoriesRequest {
    repeated string businessIdsArray = 1;
    bool includeMetrics = 2;
}

message IMPGetActiveBusinessStoriesResponse {
    repeated .impala.stories.common.IMPBusinessStory storiesArray = 1;
}

message IMPGetBusinessStoryManifestForSnapIdsRequest {
    string businessId = 1;
    repeated string snapIdsArray = 2;
}

message IMPGetBusinessStoryManifestForSnapIdsResponse {
    .snapchat.context.SCStoryManifest manifest = 1;
}

message IMPGetBusinessStoryManifestRequest {
    string businessId = 1;
    .impala.stories.common.IMPTimeRange timeRange = 2;
    bool includeInsights = 3;
}

message IMPGetBusinessStoryManifestResponse {
    .snapchat.context.SCStoryManifest manifest = 1;
}

message IMPGetBusinessStorySnapViewersRequest {
    string snapId = 1;
}

message IMPGetBusinessStorySnapViewersResponse {
    .impala.stories.IMPBusinessSnapInsights insights = 1;
}

message IMPGetBusinessStorySnapWasPersistedRequest {
    string businessId = 1;
    string clientId = 2;
}

message IMPGetBusinessStorySnapWasPersistedResponse {
    bool persisted = 1;
}

message IMPGetPastBusinessStoriesRequest {
    string businessId = 1;
    string pageId = 2;
    int32 limit = 3;
}

message IMPGetPastBusinessStoriesResponse {
    string nextPageId = 1;
    repeated .snapchat.context.SCStoryManifest manifestsArray = 2;
}

message IMPInternalArchiveBusinessSnapBySnapIdRequest {
    string userId = 1;
    string snapId = 2;
}

message IMPInternalArchiveBusinessSnapBySnapIdResponse {
    .impala.stories.IMPBusinessSnap archivedSnap = 1;
}

message IMPInternalBatchGetBusinessStoryManifestByHostUserIdRequest {
    repeated string userIdsArray = 1;
}

message IMPInternalBatchGetBusinessStoryManifestByHostUserIdResponse {
    repeated .impala.stories.IMPInternalBatchGetBusinessStoryManifestByHostUserIdResponse.ManifestsEntry manifests = 1;
    message ManifestsEntry {
        string key = 1;
        .snapchat.context.SCStoryManifest value = 2;
    }
}

message IMPInternalDeleteBusinessSnapBySnapIdRequest {
    string userId = 1;
    string snapId = 2;
}

message IMPInternalDeleteBusinessSnapBySnapIdResponse {
    .impala.stories.IMPBusinessSnap deletedSnap = 1;
}

message IMPInternalDumpBusinessSnapsRequest {
    int64 startTimestampMs = 3;
    int64 endTimestampMs = 4;
    string pageId = 5;
    string hostUserId = 1;
    string businessId = 2;
}

message IMPInternalDumpBusinessSnapsResponse {
    repeated .impala.stories.IMPBusinessSnapDump snapsArray = 1;
    string nextPageId = 2;
}

message IMPInternalGetActiveBusinessStorySnapsRequest {
    string businessId = 1;
}

message IMPInternalGetActiveBusinessStorySnapsResponse {
    repeated .impala.stories.IMPBusinessStorySnap snapsArray = 1;
}

message IMPInternalGetBusinessSnapsBySnapIdRequest {
    repeated string snapIdsArray = 1;
    bool returnSourceMediaURL = 2;
}

message IMPInternalGetBusinessSnapsBySnapIdResponse {
    repeated .impala.stories.IMPInternalGetBusinessSnapsBySnapIdResponse.SnapsEntry snaps = 1;
    message SnapsEntry {
        string key = 1;
        .impala.stories.IMPBusinessSnap value = 2;
    }
}

message IMPInternalGetBusinessStoriesRequest {
    string businessId = 1;
    string pageId = 2;
    int32 limit = 3;
    string posterUserId = 4;
}

message IMPInternalGetBusinessStoriesResponse {
    string nextPageId = 1;
    int64 numStoriesLeft = 2;
    repeated .snapchat.context.SCStoryManifest manifestsArray = 3;
    repeated .impala.stories.common.IMPBusinessStory storiesArray = 4;
}

message IMPInternalGetBusinessStoryManifestForStoryIdRequest {
    string businessId = 1;
    string storyId = 2;
    string posterUserId = 3;
    .impala.stories.common.IMPTimeRange timeRange = 4;
}

message IMPInternalGetBusinessStoryManifestForStoryIdResponse {
    .snapchat.context.SCStoryManifest manifest = 1;
}

message IMPInternalGetStoryElementsByIdsRequest {
    string profileId = 1;
    repeated string snapIdsArray = 2;
}

message IMPInternalGetStoryElementsByIdsResponse {
    repeated .snapchat.context.SCStoryElement snapsArray = 1;
}

message IMPInternalStoryIdsFromSnapIdsRequest {
    repeated string snapIdsArray = 1;
    string businessId = 2;
}

message IMPInternalStoryIdsFromSnapIdsResponse {
    repeated .impala.stories.IMPInternalStoryIdsFromSnapIdsResponse.StoryIdsBySnapEntry storyIdsBySnap = 1;
    message StoryIdsBySnapEntry {
        string key = 1;
        string value = 2;
    }
}

message IMPInternalTakedownBusinessSnapBySnapIdRequest {
    string snapId = 1;
}

message IMPInternalTakedownBusinessSnapBySnapIdResponse {
    .impala.stories.IMPBusinessSnap deletedSnap = 1;
}